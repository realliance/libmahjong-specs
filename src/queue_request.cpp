// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: queue_request.capnp

#include "queue_request.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<27> b_957a4f7f0f0c1a95 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    149,  26,  12,  15, 127,  79, 122, 149,
     26,   0,   0,   0,   2,   0,   0,   0,
     97,  24,  74,  91, 118,  50,  81, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113, 117, 101, 117, 101,  47, 113, 117,
    101, 117, 101,  95, 114, 101, 113, 117,
    101, 115, 116,  46,  99,  97, 112, 110,
    112,  58,  80, 108,  97, 121, 101, 114,
     84, 121, 112, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 117, 109,  97, 110,   0,   0,   0,
     98, 111, 116,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_957a4f7f0f0c1a95 = b_957a4f7f0f0c1a95.words;
#if !CAPNP_LITE
static const uint16_t m_957a4f7f0f0c1a95[] = {1, 0};
const ::capnp::_::RawSchema s_957a4f7f0f0c1a95 = {
  0x957a4f7f0f0c1a95, b_957a4f7f0f0c1a95.words, 27, nullptr, m_957a4f7f0f0c1a95,
  0, 2, nullptr, nullptr, nullptr, { &s_957a4f7f0f0c1a95, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(PlayerType_957a4f7f0f0c1a95, 957a4f7f0f0c1a95);
static const ::capnp::_::AlignedData<27> b_bd8c8f8a5971810e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     14, 129, 113,  89, 138, 143, 140, 189,
     26,   0,   0,   0,   2,   0,   0,   0,
     97,  24,  74,  91, 118,  50,  81, 237,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113, 117, 101, 117, 101,  47, 113, 117,
    101, 117, 101,  95, 114, 101, 113, 117,
    101, 115, 116,  46,  99,  97, 112, 110,
    112,  58,  76, 111,  98,  98, 121,  84,
    121, 112, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 108, 108,  66, 111, 116,   0,   0,
    103, 101, 110, 101, 114,  97, 108,   0, }
};
::capnp::word const* const bp_bd8c8f8a5971810e = b_bd8c8f8a5971810e.words;
#if !CAPNP_LITE
static const uint16_t m_bd8c8f8a5971810e[] = {0, 1};
const ::capnp::_::RawSchema s_bd8c8f8a5971810e = {
  0xbd8c8f8a5971810e, b_bd8c8f8a5971810e.words, 27, nullptr, m_bd8c8f8a5971810e,
  0, 2, nullptr, nullptr, nullptr, { &s_bd8c8f8a5971810e, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(LobbyType_bd8c8f8a5971810e, bd8c8f8a5971810e);
static const ::capnp::_::AlignedData<50> b_ad09a70b99c98959 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89, 137, 201, 153,  11, 167,   9, 173,
     26,   0,   0,   0,   1,   0,   2,   0,
     97,  24,  74,  91, 118,  50,  81, 237,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113, 117, 101, 117, 101,  47, 113, 117,
    101, 117, 101,  95, 114, 101, 113, 117,
    101, 115, 116,  46,  99,  97, 112, 110,
    112,  58,  80, 108,  97, 121, 101, 114,
     82,  97, 116, 105, 110, 103,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    114,  97, 116, 105, 110, 103,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110,  99, 101, 114, 116,  97, 105,
    110, 116, 121,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ad09a70b99c98959 = b_ad09a70b99c98959.words;
#if !CAPNP_LITE
static const uint16_t m_ad09a70b99c98959[] = {0, 1};
static const uint16_t i_ad09a70b99c98959[] = {0, 1};
const ::capnp::_::RawSchema s_ad09a70b99c98959 = {
  0xad09a70b99c98959, b_ad09a70b99c98959.words, 50, nullptr, m_ad09a70b99c98959,
  0, 2, i_ad09a70b99c98959, nullptr, nullptr, { &s_ad09a70b99c98959, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<99> b_d5260a86829e31dc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    220,  49, 158, 130, 134,  10,  38, 213,
     26,   0,   0,   0,   1,   0,   2,   0,
     97,  24,  74,  91, 118,  50,  81, 237,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113, 117, 101, 117, 101,  47, 113, 117,
    101, 117, 101,  95, 114, 101, 113, 117,
    101, 115, 116,  46,  99,  97, 112, 110,
    112,  58,  81, 117, 101, 117, 101,  82,
    101, 113, 117, 101, 115, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
    112, 108,  97, 121, 101, 114,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 108,  97, 121, 101, 114,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    149,  26,  12,  15, 127,  79, 122, 149,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111,  98,  98, 121,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     14, 129, 113,  89, 138, 143, 140, 189,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 114, 114, 101, 110, 116,  82,
     97, 116, 105, 110, 103,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     89, 137, 201, 153,  11, 167,   9, 173,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,  77, 115,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d5260a86829e31dc = b_d5260a86829e31dc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d5260a86829e31dc[] = {
  &s_957a4f7f0f0c1a95,
  &s_ad09a70b99c98959,
  &s_bd8c8f8a5971810e,
};
static const uint16_t m_d5260a86829e31dc[] = {3, 2, 0, 1, 4};
static const uint16_t i_d5260a86829e31dc[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_d5260a86829e31dc = {
  0xd5260a86829e31dc, b_d5260a86829e31dc.words, 99, d_d5260a86829e31dc, m_d5260a86829e31dc,
  3, 5, i_d5260a86829e31dc, nullptr, nullptr, { &s_d5260a86829e31dc, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// PlayerRating
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t PlayerRating::_capnpPrivate::dataWordSize;
constexpr uint16_t PlayerRating::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind PlayerRating::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PlayerRating::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// QueueRequest
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t QueueRequest::_capnpPrivate::dataWordSize;
constexpr uint16_t QueueRequest::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind QueueRequest::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* QueueRequest::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



