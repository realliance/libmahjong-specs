syntax="proto3";

package libmahjong2.event;

import "./rules.proto";
import "./winds.proto";
import "./tile.proto";

// Notifies are events that have occured in the game
enum NotifyType {
  // Awaiting user action
  AWAITING_USER_ACTION = 0;
  // Player discarded a tile
  TILE_DISCARDED = 1;
  // Player drew a tile from the wall
  TILE_DRAWN_WALL = 2;
  // Player drew a tile from the dead wall
  TILE_DRAWN_DEAD_WALL = 3;
  // Player declared riichi
  RIICHI_DECLARED = 4;
  // Player called a kan
  KAN_CALLED = 5;
  // Player called a pon
  PON_CALLED = 6;
  // Player called a chi
  CHI_CALLED = 7;
  // Player called a ron
  RON_CALLED = 8;
  // Player called a tsumo
  TSUMO_CALLED = 9;
  // Calling a riichi is available
  RIICHI_AVAILABLE = 10;
  // Calling a kan is available
  KAN_AVAILABLE = 11;
  // Calling a pon is available
  PON_AVAILABLE = 12;
  // Calling a chi is available
  CHI_AVAILABLE = 13;
  // Calling a ron is available
  RON_AVAILABLE = 14;
  // Calling a tsumo is available
  TSUMO_AVAILABLE = 15;
  // Dora indicator
  DORA = 16;
}

// Actions are events you can perform
enum ActionType {
  // Discard a tile
  DISCARD_TILE = 0;
  // Call riichi
  CALL_RIICHI = 1;
  // Call kan
  CALL_KAN = 2;
  // Call pon
  CALL_PON = 3;
  // Call chi
  CALL_CHI = 4;
  // Call ron
  CALL_RON = 5;
  // Call tsumo
  CALL_TSUMO = 6;
  // Decline call
  DECLINE_CALL = 7;
}

// Represents a notify event, which is an event that has occured in the game
message Notify {
  NotifyType type = 1;
  // The player seat that triggered the event
  libmahjong2.rules.Wind player_seat = 2;
  // The tile related to the event, if known information
  optional libmahjong2.tile.Tile tile = 3;
}

// Represents an action event, which is an event that you can perform
message Action {
  ActionType type = 1;
  // The player seat that triggered the event
  libmahjong2.winds.Wind player_seat = 2;
  // The tile related to the event
  libmahjong2.tile.Tile tile = 3;
}

// Represents a round start event, which is an event that occurs at the beginning of a round
message RoundStart {
  // Your new hand
  repeated libmahjong2.tile.Tile hand = 1;
  // Your seat wind
  libmahjong2.winds.Wind seat_wind = 2;
  // The prevailing wind
  libmahjong2.winds.Wind prevailing_wind = 3; 
  // All players
  repeated libmahjong2.player.Player players = 4;
}
