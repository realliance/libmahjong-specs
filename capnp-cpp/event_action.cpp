// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: event_action.capnp

#include "event_action.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<68> b_bf2315493c1ef994 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148, 249,  30,  60,  73,  21,  35, 191,
     25,   0,   0,   0,   1,   0,   1,   0,
    125, 236, 160,  39,  39,  26, 247, 137,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 118, 101, 110, 116,  47, 101, 118,
    101, 110, 116,  95,  97,  99, 116, 105,
    111, 110,  46,  99,  97, 112, 110, 112,
     58,  65,  99, 116, 105, 111, 110,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    229,  99, 173, 146, 125,  87,  39, 230,
      1,   0,   0,   0,  90,   0,   0,   0,
     65,  99, 116, 105, 111, 110,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    229,  99, 173, 146, 125,  87,  39, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 108,  97, 121, 101, 114,  83, 101,
     97, 116,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    240, 137, 193, 189, 154, 134, 198, 159,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 108, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     79, 244, 241, 191, 255,  78, 231, 254,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bf2315493c1ef994 = b_bf2315493c1ef994.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bf2315493c1ef994[] = {
  &s_9fc6869abdc189f0,
  &s_e627577d92ad63e5,
  &s_fee74effbff1f44f,
};
static const uint16_t m_bf2315493c1ef994[] = {1, 2, 0};
static const uint16_t i_bf2315493c1ef994[] = {0, 1, 2};
const ::capnp::_::RawSchema s_bf2315493c1ef994 = {
  0xbf2315493c1ef994, b_bf2315493c1ef994.words, 68, d_bf2315493c1ef994, m_bf2315493c1ef994,
  3, 3, i_bf2315493c1ef994, nullptr, nullptr, { &s_bf2315493c1ef994, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<56> b_e627577d92ad63e5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    229,  99, 173, 146, 125,  87,  39, 230,
     32,   0,   0,   0,   2,   0,   0,   0,
    148, 249,  30,  60,  73,  21,  35, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 199,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 118, 101, 110, 116,  47, 101, 118,
    101, 110, 116,  95,  97,  99, 116, 105,
    111, 110,  46,  99,  97, 112, 110, 112,
     58,  65,  99, 116, 105, 111, 110,  46,
     65,  99, 116, 105, 111, 110,  84, 121,
    112, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  99,  97, 114, 100,  84,
    105, 108, 101,   0,   0,   0,   0,   0,
     99,  97, 108, 108,  82, 105, 105,  99,
    104, 105,   0,   0,   0,   0,   0,   0,
     99,  97, 108, 108,  75,  97, 110,   0,
     99,  97, 108, 108,  80, 111, 110,   0,
     99,  97, 108, 108,  67, 104, 105,   0,
     99,  97, 108, 108,  82, 111, 110,   0,
     99,  97, 108, 108,  84, 115, 117, 109,
    111,   0,   0,   0,   0,   0,   0,   0,
    100, 101,  99, 108, 105, 110, 101,  67,
     97, 108, 108,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e627577d92ad63e5 = b_e627577d92ad63e5.words;
#if !CAPNP_LITE
static const uint16_t m_e627577d92ad63e5[] = {4, 2, 3, 1, 5, 6, 7, 0};
const ::capnp::_::RawSchema s_e627577d92ad63e5 = {
  0xe627577d92ad63e5, b_e627577d92ad63e5.words, 56, nullptr, m_e627577d92ad63e5,
  0, 8, nullptr, nullptr, nullptr, { &s_e627577d92ad63e5, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ActionType_e627577d92ad63e5, e627577d92ad63e5);
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Action
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Action::_capnpPrivate::dataWordSize;
constexpr uint16_t Action::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Action::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Action::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



